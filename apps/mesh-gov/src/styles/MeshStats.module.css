.container {
    width: 100%;
    max-width: 1200px;
    margin: 0 auto;
    padding: 1.5rem;
}

.header {
    margin-bottom: 2rem;
    text-align: center;
}

.title {
    font-size: 2rem;
    font-weight: 700;
    color: #fff;
    margin-bottom: 0.5rem;
}

.version {
    font-size: 1rem;
    color: rgba(255, 255, 255, 0.6);
}

.statsGrid {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 1.5rem;
    margin-bottom: 3rem;
}

.stat {
    background: linear-gradient(165deg, 
        rgba(255, 255, 255, 0.05) 0%,
        rgba(255, 255, 255, 0.02) 100%
    );
    backdrop-filter: blur(20px) saturate(180%);
    -webkit-backdrop-filter: blur(20px) saturate(180%);
    border-radius: 1rem;
    border: 1px solid rgba(255, 255, 255, 0.08);
    padding: 1.75rem;
    text-align: center;
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    position: relative;
    overflow: hidden;
    display: flex;
    flex-direction: column;
    justify-content: center;
    min-height: 120px;
}

.stat::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: radial-gradient(800px circle at var(--mouse-x) var(--mouse-y),
            rgba(255, 255, 255, 0.06),
            transparent 40%);
    opacity: 0;
    transition: opacity 0.4s;
    z-index: 1;
}

.stat:hover {
    transform: translateY(-4px) scale(1.01);
    border-color: rgba(255, 255, 255, 0.15);
    box-shadow: 
        0 8px 32px -4px rgba(0, 0, 0, 0.2),
        0 0 0 1px rgba(255, 255, 255, 0.1) inset;
}

.stat:hover::before {
    opacity: 1;
}

.stat>* {
    position: relative;
    z-index: 2;
}

.stat h3 {
    font-size: 0.875rem;
    font-weight: 500;
    color: rgba(255, 255, 255, 0.7);
    margin: 0 0 0.75rem 0;
    text-transform: uppercase;
    letter-spacing: 0.5px;
}

.stat p {
    font-size: 2.25rem;
    font-weight: 600;
    background: linear-gradient(
        120deg,
        rgba(255, 255, 255, 0.95) 0%,
        rgba(255, 255, 255, 0.85) 100%
    );
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
    margin: 0;
    line-height: 1.2;
    word-break: break-word;
    text-shadow: 0 2px 10px rgba(255, 255, 255, 0.1);
}

.githubStats,
.chartSection {
    margin-bottom: 2.5rem;
}

.githubStats h2,
.chartSection h2 {
    font-size: 1.25rem;
    font-weight: 600;
    color: var(--text-color);
    margin-bottom: 1rem;
}

.chartSection {
    margin-bottom: 2.5rem;
}

.chartSection h2 {
    font-size: 1.125rem;
    font-weight: 500;
    color: rgba(255, 255, 255, 0.5);
    margin-bottom: 1rem;
    letter-spacing: 0.02em;
    transition: color 0.3s ease;
}

.chartSection:hover h2 {
    color: rgba(255, 255, 255, 0.7);
}

.githubStats h2 {
    font-size: 1.125rem;
    font-weight: 500;
    color: rgba(255, 255, 255, 0.5);
    margin-bottom: 1rem;
    letter-spacing: 0.02em;
    transition: color 0.3s ease;
}

.githubStats:hover h2 {
    color: rgba(255, 255, 255, 0.7);
}

.chartsGrid {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 1.5rem;
    margin-bottom: 2rem;
}

.chart {
    background: rgba(255, 255, 255, 0.02);
    border: 1px solid rgba(255, 255, 255, 0.05);
    border-radius: 1rem;
    padding: 2rem;
    height: 320px;
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    position: relative;
    overflow: hidden;
    animation: chartFadeIn 0.6s ease-out;
    opacity: 0;
    animation-fill-mode: forwards;
}

.chart:hover {
    transform: translateY(-4px);
    border-color: rgba(255, 255, 255, 0.1);
    box-shadow:
        0 4px 24px -1px rgba(0, 0, 0, 0.2),
        0 0 0 1px rgba(255, 255, 255, 0.1) inset;
}

.chart::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: radial-gradient(800px circle at var(--mouse-x) var(--mouse-y),
            rgba(255, 255, 255, 0.06),
            transparent 40%);
    opacity: 0;
    transition: opacity 0.4s;
    z-index: 1;
}

.chart:hover::before {
    opacity: 1;
}

.chart>* {
    position: relative;
    z-index: 2;
}

.chartTitle {
    font-size: 1.125rem;
    font-weight: 500;
    color: rgba(255, 255, 255, 0.5);
    margin-bottom: 2rem;
    letter-spacing: 0.02em;
    transition: color 0.3s ease;
}

.chart:hover .chartTitle {
    color: rgba(255, 255, 255, 0.7);
}

.chartSection {
    margin-bottom: 3rem;
}

.yearGrid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 1.5rem;
    margin-top: 1rem;
}

.year {
    background: rgba(255, 255, 255, 0.02);
    border: 1px solid rgba(255, 255, 255, 0.05);
    border-radius: 1rem;
    padding: 2rem;
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    position: relative;
    overflow: hidden;
}

.year::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: radial-gradient(800px circle at var(--mouse-x) var(--mouse-y),
            rgba(255, 255, 255, 0.06),
            transparent 40%);
    opacity: 0;
    transition: opacity 0.4s;
    z-index: 1;
}

.year:hover {
    transform: translateY(-4px);
    border-color: rgba(255, 255, 255, 0.1);
    box-shadow:
        0 4px 24px -1px rgba(0, 0, 0, 0.2),
        0 0 0 1px rgba(255, 255, 255, 0.1) inset;
}

.year:hover::before {
    opacity: 1;
}

.year>* {
    position: relative;
    z-index: 2;
}

.year h3 {
    font-size: 1.25rem;
    font-weight: 600;
    color: #fff;
    margin: 0 0 1rem 0;
    padding-bottom: 0.75rem;
    border-bottom: 1px solid rgba(255, 255, 255, 0.06);
}

.year p {
    margin: 0.75rem 0;
    font-size: 0.9375rem;
    color: rgba(255, 255, 255, 0.7);
}

@media (max-width: 768px) {
    .statsGrid {
        grid-template-columns: repeat(2, 1fr);
        gap: 1rem;
    }

    .stat {
        padding: 1.5rem;
        min-height: 110px;
    }

    .stat p {
        font-size: 1.75rem;
    }

    .chart {
        padding: 1rem;
    }
}

@media (max-width: 1024px) {
    .chartsGrid {
        grid-template-columns: 1fr;
    }
}

@media (max-width: 640px) {
    .statsGrid {
        grid-template-columns: 1fr;
    }

    .title {
        font-size: 1.5rem;
    }

    .container {
        padding: 1rem;
    }

    .chart {
        padding: 1rem;
        height: 280px;
    }
}

@media (max-width: 480px) {
    .statsGrid {
        grid-template-columns: 1fr;
    }

    .stat {
        padding: 1.25rem;
        min-height: 100px;
    }

    .stat p {
        font-size: 1.5rem;
    }
}

.error {
    color: rgb(239, 68, 68);
    font-weight: 500;
}

.filterNotice {
    background: rgba(0, 0, 0, 0.4);
    backdrop-filter: blur(16px);
    -webkit-backdrop-filter: blur(16px);
    border: 1px solid rgba(255, 255, 255, 0.06);
    border-radius: 12px;
    padding: 1.25rem;
    margin-bottom: 1.5rem;
}

.filterNotice h2 {
    color: #fff;
    font-size: 1.1rem;
    font-weight: 600;
    margin-bottom: 0.5rem;
}

.filterNotice p {
    color: rgba(255, 255, 255, 0.7);
    font-size: 0.9rem;
    margin: 0;
}

.statsHeader {
    font-size: 1.25rem;
    font-weight: 600;
    color: var(--text-color);
    margin-bottom: 1rem;
}

.customTooltip {
    background: rgba(0, 0, 0, 0.95);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 8px;
    padding: 12px 16px;
    box-shadow:
        0 8px 24px rgba(0, 0, 0, 0.4),
        0 4px 8px rgba(0, 0, 0, 0.2);
}

.tooltipLabel {
    color: rgba(255, 255, 255, 0.7);
    font-size: 0.875rem;
    font-weight: 500;
    margin: 0 0 4px 0;
}

.tooltipValue {
    color: #fff;
    font-size: 1rem;
    font-weight: 600;
    margin: 0;
}

.chart :global(.recharts-line-curve) {
    stroke-width: 1.5px;
    filter: drop-shadow(0 0 8px rgba(255, 255, 255, 0.3));
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    animation: lineGlow 3s ease-in-out infinite;
    animation-delay: 0.6s;
    stroke-dasharray: 2000;
    stroke-dashoffset: 2000;
    animation: lineGlow 3s ease-in-out infinite, drawLine 1.5s ease-out forwards;
}

.chart:hover :global(.recharts-line-curve) {
    filter: drop-shadow(0 0 12px rgba(255, 255, 255, 0.4));
    stroke-width: 2px;
}

.chart :global(.recharts-line-dots circle) {
    fill: #FFFFFF;
    stroke: rgba(0, 0, 0, 0.3);
    stroke-width: 1.5px;
    filter: drop-shadow(0 0 4px rgba(255, 255, 255, 0.3));
    transition: all 0.3s ease;
    r: 3;
    opacity: 0;
    animation: dotsFadeIn 0.3s ease-out forwards;
    animation-delay: 1s;
}

.chart :global(.recharts-line-dots circle:hover) {
    r: 4;
    stroke-width: 2px;
    filter: drop-shadow(0 0 8px rgba(255, 255, 255, 0.5));
}

@keyframes lineGlow {
    0% {
        filter: drop-shadow(0 0 8px rgba(255, 255, 255, 0.3));
    }
    50% {
        filter: drop-shadow(0 0 12px rgba(255, 255, 255, 0.5));
    }
    100% {
        filter: drop-shadow(0 0 8px rgba(255, 255, 255, 0.3));
    }
}

.chart :global(.recharts-bar-rectangles) path {
    fill: #FFFFFF !important;
    opacity: 0;
    transition: all 0.3s ease;
    filter: drop-shadow(0 4px 8px rgba(0, 0, 0, 0.25));
    animation: barFadeIn 0.5s ease-out forwards;
    animation-delay: 0.3s;
    transform-origin: bottom;
}

@keyframes barFadeIn {
    0% {
        opacity: 0;
        transform: scaleY(0);
    }
    100% {
        opacity: 0.8;
        transform: scaleY(1);
    }
}

.chart :global(.recharts-cartesian-axis-line),
.chart :global(.recharts-cartesian-axis-tick-line) {
    stroke: rgba(255, 255, 255, 0.1);
    opacity: 0;
    animation: gridFadeIn 0.3s ease-out forwards;
}

.chart :global(.recharts-cartesian-grid-horizontal) line,
.chart :global(.recharts-cartesian-grid-vertical) line {
    stroke: rgba(255, 255, 255, 0.05);
}

.chart :global(.recharts-text) {
    fill: rgba(255, 255, 255, 0.6);
    font-size: 11px;
    opacity: 0;
    animation: textFadeIn 0.3s ease-out forwards;
    animation-delay: 0.2s;
}

@keyframes drawLine {
    to {
        stroke-dashoffset: 0;
    }
}

@keyframes dotsFadeIn {
    from {
        opacity: 0;
        transform: scale(0);
    }
    to {
        opacity: 1;
        transform: scale(1);
    }
}

@keyframes gridFadeIn {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

@keyframes textFadeIn {
    from {
        opacity: 0;
        transform: translateY(5px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

.statsGrid {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 1.5rem;
    margin-bottom: 3rem;
}

.statCard {
    background: rgba(255, 255, 255, 0.02);
    border: 1px solid rgba(255, 255, 255, 0.05);
    border-radius: 1rem;
    padding: 2rem;
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    position: relative;
    overflow: hidden;
}

.statCard:hover {
    transform: translateY(-4px);
    border-color: rgba(255, 255, 255, 0.1);
    box-shadow:
        0 4px 24px -1px rgba(0, 0, 0, 0.2),
        0 0 0 1px rgba(255, 255, 255, 0.1) inset;
}

.statCard::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: radial-gradient(800px circle at var(--mouse-x) var(--mouse-y),
            rgba(255, 255, 255, 0.06),
            transparent 40%);
    opacity: 0;
    transition: opacity 0.4s;
    z-index: 1;
}

.statCard:hover::before {
    opacity: 1;
}

.statCard>* {
    position: relative;
    z-index: 2;
}

.statTitle {
    font-size: 0.875rem;
    color: rgba(255, 255, 255, 0.6);
    margin-bottom: 0.5rem;
}

.statValue {
    font-size: 2rem;
    font-weight: 600;
    color: rgba(255, 255, 255, 0.9);
    margin: 0;
}

@keyframes chartFadeIn {
    0% {
        opacity: 0;
        transform: translateY(10px);
    }
    100% {
        opacity: 1;
        transform: translateY(0);
    }
}